<style scoped lang="less" rel="stylesheet/less">
  @import "../../styles/common.less";
    .m-login{
       .m-login-back{
           display: block;
           width: 100%;
           height: 100vh;
       }
        .m-login-content{
            position: absolute;
            top: 395rpx;
            left: 75rpx;
            font-size: 28rpx;
            text-align: center;
            .m-input-box{
                width: 540rpx;
                height: 90rpx;
                line-height: 90rpx;
                margin-bottom: 70rpx;
                background: rgba(0,0,0,0.16);
                border-radius: 50rpx;
                padding: 0 30rpx;
                .flex-row(flex-start);
                color: #FFFFFF;
                input{
                    font-size: 28rpx;
                    padding-left: 50rpx;

                }
                &.flex-between{
                    .flex-row(space-between);
                }
            }
            .m-btn-box{
                width: 600rpx;
                height: 90rpx;
                line-height: 90rpx;
                margin-bottom: 20rpx;
                background: @common-color;
                border-radius: 50rpx;
                text-align: center;
                color: #fff;
            }
            .m-agree{
                text-decoration:underline;
                color: @common-color;
            }
        }
        .m-weixin{
            position: absolute;
            bottom: 60rpx;
            text-align: center;
            width: 100%;
            background: none;
            border: 1px solid transparent;
            .flex-col(center);
            font-size: 20rpx;
            .m-icon-wei{
                width: 92rpx;
                height: 92rpx;
                margin-bottom: 20rpx;
            }

        }
        button::after {
            border: none
        }
    }
</style>
<template>
    <view class="m-login">
        <image class="m-login-back" src="../../images/login-back.png" />
        <view class="m-login-content">
            <view class="m-input-box">
                <input type="text" value="{{user_telphone}}" bindblur="bindInputBlur" placeholder-style="color: #fff;font-size: 28rpx;"  placeholder="请输入手机号码"/>
            </view>
            <view class="m-input-box flex-between">
                <input type="text" value="{{code_value}}" bindblur="bindCodeBlur" placeholder-style="color: #fff;font-size: 28rpx;" placeholder="请输入验证码">
                <view class="m-red" @tap="getCode">获取验证码</view>
            </view>

            <view class="m-btn-box" @tap="loginTap">
                登录
            </view>
            <view class="m-agreement">
                点击登录即表示接受
                <span class="m-agree">用户协议</span>
            </view>



        </view>
        <button open-type="getUserInfo" class="m-weixin" bindgetuserinfo="onGotUserInfo">  <image class="m-icon-wei" src="../../images/icon-wei.png" />
            <p>微信登录</p>
        </button>


    </view>

</template>
<script >
  import wepy from 'wepy';
  import api from '../../api/api'
  import tip from '../../utils/tip'
  export default class Login extends wepy.page{
    config = {
      navigationBarTitleText: '登录'
    }
    data = {
        user_telphone:'',
        code_value:''
    }
    getInfo(code){
        let that = this;
        wx.request({
            url: api.get_wechat_code, //仅为示例，并非真实的接口地址
            data: {
                code:code
            },
            header: {
                'content-type': 'application/json' // 默认值
            },
            success: function (res) {
                wx.getUserInfo({
                    success(response) {
                        const userInfo = response.userInfo;
                        let params = {
                            user_openid:res.data.data.user_openid,
                            user_icon:userInfo.avatarUrl,
                            user_name:userInfo.nickName
                        }
                        that.getLogin(params);
                    }
                })
            },
            error:function (error) {
                tip.loaded();
            }
        })
    }
     getLogin(params) {
         let that = this;
         wx.request({
             url: api.user_login, //仅为示例，并非真实的接口地址
             data: params,
             method:'POST',
             header: {
                 'content-type': 'application/json' // 默认值
             },
             success: function (res) {
                     wx.setStorage({
                         'key': 'token',
                         'data': res.data.data.token
                     });
                 wx.switchTab({
                     url: '/pages/index/index'
                 });
             },
             error:function (error) {
                 tip.loaded();
             }
         })
     }
      onLoad(){
      }
    methods = {
        onGotUserInfo: function (e) {
            var that = this;
            wx.getSetting({
                success:function(res) {
                    if (!res.authSetting['scope.userInfo']) {
                        wx.authorize({
                            scope: 'scope.userInfo',
                            success:function (res_info){
                                wx.login({
                                    success:function(resLogin){
                                        var code = resLogin.code;
                                        that.getInfo(code);
                                        wx.setStorage({
                                            'key': 'code',
                                            'data': code
                                        });
                                    }
                                });
                            },fail:function (res_info) {
                                console.log(res_info)
                            }
                        })
                    }else{
                        wx.login({
                            success:function(resLogin){
                                var code = resLogin.code;
                                that.getInfo(code);
                                wx.setStorage({
                                    'key': 'code',
                                    'data': code
                                });
                            }
                        });
                    }
                },
                fail:function (res) {
                    console.log(res)
                }
            });
        },
        getCode(){
            let that = this;
            if(!that.user_telphone){
                tip.error('请输入电话号码');
                return false;
            }
            wx.request({
                url: api.get_inforcode, //仅为示例，并非真实的接口地址
                data: {
                    user_telphone:that.user_telphone
                },
                header: {
                    'content-type': 'application/json' // 默认值
                },
                success: function (res) {
                    tip.success(res.data.message);
                },
                error:function (error) {
                    tip.error(error.data.message);
                }
            })
        },
        bindInputBlur(e){
            this.user_telphone = e.detail.value;
        },
        bindCodeBlur(e){
            this.code_value = e.detail.value;
        },
        loginTap(){
            let params = {
                user_telphone:this.user_telphone,
                code_value:this.code_value
            }
            this.getLogin(params);
        }
      }
  }
</script>
